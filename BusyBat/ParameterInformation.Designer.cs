//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusyBat {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ParameterInformation {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ParameterInformation() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BusyBat.ParameterInformation", typeof(ParameterInformation).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -arr.
        /// </summary>
        internal static string ArrayParameter {
            get {
                return ResourceManager.GetString("ArrayParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -bg.
        /// </summary>
        internal static string BackgroundParameter {
            get {
                return ResourceManager.GetString("BackgroundParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -cls.
        /// </summary>
        internal static string ClearConsoleParameter {
            get {
                return ResourceManager.GetString("ClearConsoleParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -enum.
        /// </summary>
        internal static string EnumParameter {
            get {
                return ResourceManager.GetString("EnumParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -fns.
        /// </summary>
        internal static string FakeNameSpaceParameter {
            get {
                return ResourceManager.GetString("FakeNameSpaceParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -file.
        /// </summary>
        internal static string FileParameter {
            get {
                return ResourceManager.GetString("FileParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -fg.
        /// </summary>
        internal static string ForegroundParameter {
            get {
                return ResourceManager.GetString("ForegroundParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -grp.
        /// </summary>
        internal static string GroupParameter {
            get {
                return ResourceManager.GetString("GroupParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -help.
        /// </summary>
        internal static string HelpParameter {
            get {
                return ResourceManager.GetString("HelpParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -json.
        /// </summary>
        internal static string JsonParameter {
            get {
                return ResourceManager.GetString("JsonParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -nolf.
        /// </summary>
        internal static string NoLineFeedParameter {
            get {
                return ResourceManager.GetString("NoLineFeedParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -pr.
        /// </summary>
        internal static string PrintParameter {
            get {
                return ResourceManager.GetString("PrintParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     -bg : Change the background colour to that specified. The colour to change to is any of the
        ///          standard ConsoleColor enumeration values as with the foreground colour..
        /// </summary>
        internal static string PrintUsageBackgroundDescriptionLine {
            get {
                return ResourceManager.GetString("PrintUsageBackgroundDescriptionLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -cls : Clears the console buffer and display before writing anything to standard output..
        /// </summary>
        internal static string PrintUsageClearConsoleDescription {
            get {
                return ResourceManager.GetString("PrintUsageClearConsoleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Busy Bat is an all-in-one utility knife that provides extended console support for coloured
        ///background and/or foreground output.
        ///.
        /// </summary>
        internal static string PrintUsageDescriptionLine {
            get {
                return ResourceManager.GetString("PrintUsageDescriptionLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   -enum : Enumerate the indicated folder for files with a filename that matches the specific
        ///          pattern. When using this option, the root folder and search pattern must be given
        ///          alongside the parameter, e.g. -enum c:\ *.log.
        /// </summary>
        internal static string PrintUsageEnumDescription {
            get {
                return ResourceManager.GetString("PrintUsageEnumDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   -file : References a file that should be used for either matching a regular expression (-rx)
        ///          within or for extracting a Json value (-json) given a Json path expression..
        /// </summary>
        internal static string PrintUsageFileDescription {
            get {
                return ResourceManager.GetString("PrintUsageFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     -fg : Change the foreground colour to that specified. The colour to change to is any of the
        ///          standard ConsoleColor enumeration values, e.g. DarkRed, Blue, White, Green, Cyan, etc..
        /// </summary>
        internal static string PrintUsageForegroundDescriptionLine {
            get {
                return ResourceManager.GetString("PrintUsageForegroundDescriptionLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -grp : If searching for a regular expression match within a value (-val) or file (-file) either
        ///          the whole match is returned or by providing this parameter just the matched group
        ///          value is returned..
        /// </summary>
        internal static string PrintUsageGroupDescription {
            get {
                return ResourceManager.GetString("PrintUsageGroupDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Busy Bat v{0}
        ///.
        /// </summary>
        internal static string PrintUsageHeaderLine {
            get {
                return ResourceManager.GetString("PrintUsageHeaderLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   -help : Shows help about Busy Bat..
        /// </summary>
        internal static string PrintUsageHelpDescription {
            get {
                return ResourceManager.GetString("PrintUsageHelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   -json : Extract a Json property using the provided Json path. The source to use for parsing
        ///          is either taken from the passed in value (-val) or from a file (-file). Alternatively, the
        ///          data can be piped into the application through standard input. If the -arr parameter
        ///          is passed on the command line with -json collections are returned on multiple lines..
        /// </summary>
        internal static string PrintUsageJsonDescription {
            get {
                return ResourceManager.GetString("PrintUsageJsonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   -nolf : Prints any output from the -pr option without adding a new line..
        /// </summary>
        internal static string PrintUsageNoLineFeedDescription {
            get {
                return ResourceManager.GetString("PrintUsageNoLineFeedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} [-help] [-fg {{foreground colour}}] [-bg {{bg colour}}] [-pr {{output}}] [-nolf] [-ret] [-rst]
        ///    [-cls] [-rx {{expression}} {{-val input value | -file filepath}} [-grp group name]] [-enum
        ///    {{root}} {{pattern}}] [-json {{json path}} [-arr]] [-xml {{xpath}} [-fns {{namespace}}]]
        ///.
        /// </summary>
        internal static string PrintUsageParameterOptions {
            get {
                return ResourceManager.GetString("PrintUsageParameterOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     -pr : Print a message as provided using the colour settings specified. If the -ret parameter
        ///          was not specified, the colour settings are reset back to the colours before the Busy
        ///          Bat was executed..
        /// </summary>
        internal static string PrintUsagePrintDescription {
            get {
                return ResourceManager.GetString("PrintUsagePrintDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     -rx : Search the given value (-val) or file (-file) for the regular expression passed in using
        ///          this parameter..
        /// </summary>
        internal static string PrintUsageRegularExpressionDescription {
            get {
                return ResourceManager.GetString("PrintUsageRegularExpressionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -rst : Reset the console to its default colours..
        /// </summary>
        internal static string PrintUsageResetDescription {
            get {
                return ResourceManager.GetString("PrintUsageResetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -ret : Retain the colour settings after the application has exited. This will persist any of
        ///          the colour settings specified..
        /// </summary>
        internal static string PrintUsageRetainDescriptionLine {
            get {
                return ResourceManager.GetString("PrintUsageRetainDescriptionLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -val : String value provided to match the regular expression against (-rx) or to search for a
        ///          Json path (-json) for extracting a property..
        /// </summary>
        internal static string PrintUsageValueDescription {
            get {
                return ResourceManager.GetString("PrintUsageValueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    -xml : Extract an XML value using the provided XML path. The source to use for parsing
        ///          is either taken from the passed in value (-val) or from a file (-file). Alternatively, the
        ///          data can be piped into the application through standard input..
        /// </summary>
        internal static string PrintUsageXmlDescription {
            get {
                return ResourceManager.GetString("PrintUsageXmlDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -rx.
        /// </summary>
        internal static string RegularExpressionParameter {
            get {
                return ResourceManager.GetString("RegularExpressionParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -rst.
        /// </summary>
        internal static string ResetParameter {
            get {
                return ResourceManager.GetString("ResetParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -ret.
        /// </summary>
        internal static string RetainParameter {
            get {
                return ResourceManager.GetString("RetainParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -val.
        /// </summary>
        internal static string ValueParameter {
            get {
                return ResourceManager.GetString("ValueParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -xml.
        /// </summary>
        internal static string XmlParameter {
            get {
                return ResourceManager.GetString("XmlParameter", resourceCulture);
            }
        }
    }
}
